# -*- coding: utf-8 -*-
"""RESUME TRACKER USING LLM.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1hUsmj_BkHk45Xr2ISl1x84CbLrZ0fXKR
"""

import gradio as gr
import PyPDF2
from transformers import pipeline
import re

# Load an open-source LLM for text generation (e.g., flan-t5)
llm_pipeline = pipeline("text2text-generation", model="google/flan-t5-small")

# Function to clean extracted text from PDF
def clean_text(text):
    # Remove extra whitespace and newlines
    text = re.sub(r'\s+', ' ', text).strip()
    return text

# Function to extract text from PDF
def extract_text_from_pdf(file):
    reader = PyPDF2.PdfReader(file)
    text = ""
    for page in reader.pages:
        text += page.extract_text()
    return clean_text(text)

# Function to extract resume information using LLM
def extract_resume_info(text):
    # Define a detailed prompt for the LLM
    prompt = f"""
    Extract the following information from the resume text below:
    - Name: Extract the full name of the person.
    - Email: Extract the email address.
    - Skills: Extract a list of technical skills (e.g., Python, Java, Machine Learning).
    - Experience: Summarize the work experience in 2-3 sentences.

    Resume Text:
    {text}

    Provide the output in the following format:
    Name: [Full Name]
    Email: [Email Address]
    Skills: [Skill 1, Skill 2, Skill 3]
    Experience: [Summary of work experience]
    """

    # Use the LLM to extract information
    result = llm_pipeline(prompt, max_length=500)
    extracted_info = result[0]['generated_text']

    # Post-process the output to ensure it follows the desired format
    if "Name:" not in extracted_info:
        extracted_info = "Name: Not found\n" + extracted_info
    if "Email:" not in extracted_info:
        extracted_info = "Email: Not found\n" + extracted_info
    if "Skills:" not in extracted_info:
        extracted_info = "Skills: Not found\n" + extracted_info
    if "Experience:" not in extracted_info:
        extracted_info = "Experience: Not found\n" + extracted_info

    return extracted_info

# Gradio interface
def process_resume(file):
    # Step 1: Extract text from the uploaded PDF
    text = extract_text_from_pdf(file)

    # Step 2: Extract information using the LLM
    extracted_info = extract_resume_info(text)

    return extracted_info

# Define Gradio interface
interface = gr.Interface(
    fn=process_resume,
    inputs=gr.File(label="Upload Resume (PDF)"),
    outputs=gr.Textbox(label="Extracted Information"),
    title="Resume Tracking System",
    description="Upload a resume (PDF) to extract key information using an LLM."
)

# Launch the Gradio app
interface.launch()

pip install gradio transformers PyPDF2 torch